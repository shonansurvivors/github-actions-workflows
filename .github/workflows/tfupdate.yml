name: Create tfupdate PR

on:
  workflow_call:
    inputs:
      tfupdate_base_branch:
        required: false
        type: string
        default: main
      tfupdate_branch:
        required: false
        type: string
        default: tfupdate
      tf_root_dir:
        required: false
        type: string
        default: .

env:
  TFUPDATE_BINARY: https://github.com/minamijoyo/tfupdate/releases/download/v0.6.3/tfupdate_0.6.3_linux_amd64.tar.gz
  TFUPDATE_BASE_BRANCH: ${{ inputs.tfupdate_base_branch }}
  TFUPDATE_BRANCH: ${{ inputs.tfupdate_branch }}
  TF_ROOT_DIR: ${{ inputs.tf_root_dir }}

jobs:
  tfupdate:
    runs-on: ubuntu-20.04

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - id: check-branch
        # NOTE: Shows lots of warnings because of https://github.com/octokit/request-action#warnings
        # NOTE: If ${{ env.TFUPDATE_BRANCH }} doesn't exist, you'll get 404 Not Found error, but no problem.
        uses: octokit/request-action@7e93b91076fad3920c29d44eb2a6311d929db3dd #v2.1.0
        with:
          route: GET /repos/{repository}/git/ref/{ref}
          repository: ${{ github.repository }}
          ref: heads/${{ env.TFUPDATE_BRANCH }}
        continue-on-error: true

      - uses: actions/checkout@v2
        if: steps.check-branch.outputs.status == 200
        with:
          ref: ${{ env.TFUPDATE_BRANCH }}

      - uses: actions/checkout@v2
        if: steps.check-branch.outputs.status != 200
        with:
          ref: ${{ env.TFUPDATE_BASE_BRANCH }}

      - name: Create tfupdate branch if not exist
        if: steps.check-branch.outputs.status != 200
        run: |
          git branch ${{ env.TFUPDATE_BRANCH }}
          git branch --set-upstream-to=origin/${{ env.TFUPDATE_BASE_BRANCH }} ${{ env.TFUPDATE_BRANCH }}

      - name: Get the commit sha before tfupdate
        id: before-sha
        run: |
          echo ::set-output name=sha::$(git log --pretty=%H | head -n1)

      - name: Setup tfupdate from binary
        run: |
          set -o pipefail
          wget -P /tmp ${{ env.TFUPDATE_BINARY }}
          basename ${{ env.TFUPDATE_BINARY }} | xargs -I {} tar xvf /tmp/{} -C /tmp
          sudo mv /tmp/tfupdate /usr/local/bin
          sudo chmod +x /usr/local/bin/tfupdate

      # Providers
      - run: tfupdate provider -r aws .

      # Terraform
      - run: tfupdate terraform -r .

      - name: Update .terraform-version
        run: |
          find . -type f -name .terraform-version | xargs sed -i -e "s/[0-9.]\+/$(tfupdate release latest hashicorp/terraform)/g"

#      - name: Update terraform_version in GitHub Actions workflow files
#        run: |
#          sed -i -e "s/terraform_version: [0-9.]\+/terraform_version: $(tfupdate release latest hashicorp/terraform)/g" .github/workflows/*

      - name: Get Terraform latest version number
        id: get-terraform-latest-version-number
        run: |
          ver=$(tfupdate release latest hashicorp/terraform)
          echo "::set-output name=terraform_version::$ver"

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ steps.get-terraform-latest-version-number.outputs.terraform_version }}

      - name: Update .terraform.lock.hcl
        # NOTE: In order to run terraform init without AWS credentials, switch backend to local.
        run: |
          dirs=$(find ${TF_ROOT_DIR} -type f -name '*.tf' -exec dirname {} \; | grep -v 'modules\|\.terraform' | uniq)
          for dir in $dirs; do
            cd ${{ github.workspace }}/$dir
            cat << EOF > _override.tf
            terraform {
              backend "local" {
              }
            }
          EOF
            terraform init -upgrade
            terraform providers lock -platform linux_amd64 -platform darwin_amd64
            rm _override.tf
          done


      - uses: EndBug/add-and-commit@8c12ff729a98cfbcd3fe38b49f55eceb98a5ec02 #v7.5
        with:
          branch: ${{ env.TFUPDATE_BRANCH }}
          message: "tfupdate on CI"

      - name: Get the commit sha after tfupdate
        id: after-sha
        run: |
          echo ::set-output name=sha::$(git log --pretty=%H | head -n1)

      - uses: repo-sync/pull-request@5ba2c80b97c87b9174c1548141b7acd80f6376e1 #v2.6.1
        if: ${{ steps.before-sha.outputs.sha != steps.after-sha.outputs.sha }}
        with:
          source_branch: ${{ env.TFUPDATE_BRANCH }}
          destination_branch: ${{ env.TFUPDATE_BASE_BRANCH }}
          pr_title: Update Terraform Version & Terraform Providers Version
          pr_body: |
            **This pull request is created automatically by the CI: [tfupdate](https://github.com/${{ github.repository }}/actions?query=workflow%3Atfupdate)**

            ---

            If you didn't use any terraform CI(e.g. atlantis), run the below code to try this changes locally.

            \`\`\`
            cd path/to/${{ github.repository }}
            gh pr checkout ${{ env.TFUPDATE_BRANCH }}
            \`\`\`
          pr_label: tfupdate
          pr_allow_empty: false
